public class KeyIndexed{
  public static void main(String [] args){
    int [] a = {1,8,-4,1,0,3,-2,3,5,3,-2};
   
    int [] b = setup(a); // create Auxiliary array
    int min = findMin(a); // minium value of a. here, -4
    int max = findMax(a); // maximum value of a. here, 8
    int shiftAmount = Math.abs(min) ; // |min| of array a
    printAux(b,shiftAmount); // prints the auxiliary array, Thus shows the count of each key
   
    //Searching Example
    System.out.println(keyIndexSearch(b,-2,shiftAmount)); // Searching for -2 in a, Should print: true
    System.out.println(keyIndexSearch(b,-4,shiftAmount)); // Searching for -4 in a, Should print: true
    System.out.println(keyIndexSearch(b,8,shiftAmount)); // Searching for 8 in a, Should print: true
    System.out.println(keyIndexSearch(b,-5,shiftAmount)); // Searching for -5 in a, Should print: false
    System.out.println(keyIndexSearch(b,-6,shiftAmount)); // Searching for 6 in a, Should print: false
    System.out.println(keyIndexSearch(b,9,shiftAmount)); // Searching for 9 in a, Should print: false
   
    //Should Print: Array a Sorted: -4 -2 -2 0 1 1 3 3 3 5 8 
    printSorted(b,shiftAmount); //Key indexed sort  
   
   
  }
 
  //Finds the minium value of array a
  public static int findMin(int [] a){
   //TO DO
    int min = a[0];
    for(int i=1; i<a.length; i++){
      if(a[i]<min){
      min = a[i];
      }
  }
    return min;
    }
 
  //Finds the maximum value of array a
  public static int findMax(int [] a){
    //TO DO
    int max = a[0];
    for(int i=1; i<a.length; i++){
      if(a[i]>max){
      max = a[i];
      }
    }
    return max;
  }
 
 
  // Creates the auxiliary array B
  public static int [] setup(int [] a){

    // Lengh of auxiliary array = max + |min| + 1

    // Find max and min of array a
  
    int min = findMin(a);
    int max = findMax(a);
    int shiftAmount = Math.abs(min) ;
    int [] b = new int[max+Math.abs(min)+1];
    for(int c=0; c<=a.length-1; c++){
      b[a[c]+shiftAmount]= b[a[c]+shiftAmount]+1;
    }
    return b;
  }
 
  //Prints the Auxiliary Array
  public static void printAux(int [] b, int k){      
    for(int i = 0; i<b.length; i++){
      System.out.println(i-k+" was found --> " + b[i] + " times."); // for a[i]= -4, b[0] will be incremented
    }
   
  }
 
  //Key Indexed Search, check range of key first
  // param b --> Auxiliary array
  // param key --> element that is to be searched in array a
  // param k --> shift amount
  public static boolean keyIndexSearch(int [] b, int key, int k){
    // TO DO

    int max = b.length-1-k;
    int min = -1*k;
    int shiftAmount = Math.abs(min) ;
    boolean flag = false;
    if(key<min || key>max){
//    flag = false;
      return false;
    }else{
      if(b[key+shiftAmount]>0){
//      flag = true;
        return true;
      }else{
//      flag = false;
        return false;
      }
    }
//    return flag; //Correct it
   
  }
 
  // key indexed sort, param b --> auxiliary array, para k --> shift amount
  public static void printSorted(int [] b, int k){
   // TO DO
    for(int i=0; i<b.length; i++){
      for(int n =0; n<b[i]; n++){
      System.out.print(i-k+" ");
    }
  }
}
}